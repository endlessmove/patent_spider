import asyncio
from playwright.async_api import async_playwright
import numpy as np
import json
import os

DOWNLOAD_DIR  = os.path.abspath('./patentID')
os.makedirs(DOWNLOAD_DIR, exist_ok=True)

async def main(init_page, key_word, url):
    
    async with async_playwright() as p:
        browser = await p.chromium.launch(headless=False)  
        context = await browser.new_context()
        page = await context.new_page()
        num_page = init_page
        
        await page.goto(url)
        await page.wait_for_timeout(1000)
        # 鼠标悬浮在专利按钮，并在下拉框中选中国专利
        await page.evaluate("""
        const el = document.querySelector("a[name='classify'][classid='VUDIXAIY']");
        if (el) {
        const ev1 = new MouseEvent('mouseover', { bubbles: true });
        const ev2 = new MouseEvent('mouseenter', { bubbles: true });
        el.dispatchEvent(ev1);
        el.dispatchEvent(ev2);
        }
        const li = document.querySelector("li.haschild.cur");
        if (li) {
        const submenu = li.querySelector("ul");
        if (submenu) submenu.style.display = 'block';
        }
        """)
        await page.wait_for_timeout(400)
        await page.click("a[name='classify'][classid='OORPU5FE']")
        
        # 点击搜索关键词
   
        checkbox_selector = f"input[type='checkbox'][value='{key_word}']"
        await page.wait_for_selector(checkbox_selector)

        # 点击复选框
        await page.click(checkbox_selector)
        print("✅ 已点击复选框")

        if num_page > 1:
            for i in range(1,num_page):
                next_button = "#PageNext"
                if await page.locator(next_button).is_visible():
                    old_page_num = await page.get_attribute(next_button, "data-curpage")
                
                    print(f"翻转第{old_page_num}页...")
                    await page.click(next_button)
                    num = np.random.choice([1.0,0.4,0.8,1.2],1)
                    await asyncio.sleep(num)
                    await page.wait_for_function(
                            """
                            ([selector, oldVal]) => {
                                const el = document.querySelector(selector);
                                const curPage = el ? el.getAttribute('data-curpage') : null;
                                return curPage !== oldVal;
                            }
                            """,
                            arg=[next_button, old_page_num],
                            timeout=10000
                        )
                    await asyncio.sleep(1.2)
        
        while True:
            await page.wait_for_load_state("networkidle")
            await asyncio.sleep(2)
            await page.wait_for_selector("table.result-table-list")
            patent_links = await page.query_selector_all("a.fz14")      
            print(f"开始获取当前第{num_page}页专利信息！！！")
            # 每一页保存一个文件，方便问题排查
            data_save= {'ids':[],"page_num":num_page}
            for i, link in enumerate(patent_links):
                # 在新标签页打开
                new_page_promise  = context.wait_for_event("page")
                await link.click()
                new_page = await new_page_promise
                
                try:
                  
                    await page.wait_for_load_state("networkidle")
                    # 等待数据加载
                    await page.wait_for_timeout(1400)
                    gongkai_selector = (
                        "xpath=(//span[contains(text(),'授权公告号')]/following-sibling::p"
                        " | //span[contains(text(),'申请公布号')]/following-sibling::p)[1]")
                    gongkaihao = await new_page.text_content(gongkai_selector)
                    gongkaihao = gongkaihao.strip() if gongkaihao else "未找到"
                    print(f"[{i+1}] 专利号：{gongkaihao}")
                    data_save["ids"].append(gongkaihao)
                except Exception as e:
                    print(f"[{i+1}] 提取失败：{e}")
                    
                num = np.random.choice([1.0, 1.2, 1.5, 1.6, 1.8, 2.0],1)
                await asyncio.sleep(num)

                await new_page.close()
                
            with open(os.path.join(DOWNLOAD_DIR,f'patent_{num_page}.json'),'w',encoding='utf-8') as f:
                json.dump(data_save, f, ensure_ascii=False, indent=2)
            
            next_button = "#PageNext"
            if await page.locator(next_button).is_visible():
                old_page_num = await page.get_attribute(next_button, "data-curpage")
                now_page = int(old_page_num) -1
                print(f" ✔ 已经完成第{now_page}页专利号的搜索。")
                await page.click(next_button)
                num = np.random.choice([1.0, 1.2, 1.5, 1.6, 1.8, 2.0, 2.2],1)
                await asyncio.sleep(num)
                # await page.wait_for_function(
                #     "(selector, oldVal) => document.querySelector(selector)?.getAttribute('data-curpage') !== oldVal",
                #     next_button, old_page_num
                # )
                await page.wait_for_function(
                        """
                        ([selector, oldVal]) => {
                            const el = document.querySelector(selector);
                            const curPage = el ? el.getAttribute('data-curpage') : null;
                            return curPage !== oldVal;
                        }
                        """,
                        arg=[next_button, old_page_num],
                        timeout=10000
                    )
                await asyncio.sleep(1.6)
            else:
                
                print("⚠️ 到达最后一页。所有数据已获取！")
                break
           
            num_page += 1

        await browser.close()


if __name__ == "__main__":
    init_page = 1
    key_word = "xxxx"  #  需要与网页中的关键词一致
    url = "https://xxx.xxx.xx/xxxx"  # 搜索页面
    asyncio.run(main(init_page, key_word, url))
